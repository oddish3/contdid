# Column 1: Basic DiD without fixed effects
model1 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after,
data = data, cluster = "county_code")
summary(model1)
# Column 2: DiD with state fixed effects
model2 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after | stateid,
data = data, cluster = "county_code")
# Column 3: DiD with county controls, year FE, and state FE
controls <- paste(c(paste0("postint_", county_controls),
paste0("mis_", county_controls_missing),
paste0("asinh_", county_controls),
county_controls_missing),
collapse = " + ")
formula3 <- as.formula(paste("a_gb_tot ~ a_killed_w + a_killed_w_after +", controls, "| year + stateid"))
model3 <- feols(formula3, data = data, cluster = "county_code")
# Column 4: DiD with county FE and year FE
model4 <- feols(a_gb_tot ~ a_killed_w_after | county_code + year,
data = data, cluster = "county_code")
# Column 5: DiD with county FE and state-by-year FE
model5 <- feols(a_gb_tot ~ a_killed_w_after | county_code + stateid^year,
data = data, cluster = "county_code")
# Column 6: County-level linear time trends, county FE, year FE
model6 <- feols(a_gb_tot ~ a_killed_w_after + i(year) + year[county_code],
data = data,
cluster = "county_code")
# Update the models list
models <- list(model1, model2, model3, model4, model5, model6)
library(modelsummary)
# Prepare the list of models
model_list <- list(model1, model2, model3, model4, model5, model6)
# Generate the regression table
regression_table <- modelsummary(model_list,
estimate = "{estimate}{stars}",
statistic = "({std.error})",
coef_map = c("a_killed_w_after" = "Coefficient of a_killed_w_after"),
gof_omit = "AIC|BIC|Log.Lik",
output = "latex"
)
# Print LaTeX code
# cat(regression_table)
# Step 1: Calculate change in gb_tot relative to 1941
calculate_change <- function(data) {
base_year <- 1941
# Calculate base values for each county_code in 1941
base_values <- data %>%
filter(year == base_year) %>%
select(county_code, gb_tot) %>%
rename(base_gb_tot = gb_tot)
data %>%
left_join(base_values, by = "county_code") %>%
group_by(county_code, year) %>%
reframe(change_gb_tot = gb_tot - base_gb_tot) %>%
arrange(county_code, year)
}
change_data <- calculate_change(data)
# Step 2: Merge with killed_w data
final_data <- data %>%
left_join(change_data, by = c("county_code", "year"), relationship = "many-to-many") %>%
select(county_code, year, killed_w, change_gb_tot)
# Step 3: Transform killed_w variable
transform_killed_w <- function(x) {
if (min(x) == max(x)) return(x)  # Handle the case where all values are the same
(x - min(x)) / (max(x) - min(x))
}
final_data <- final_data %>% filter(!is.na(killed_w) & !is.na(change_gb_tot))
final_data$killed_w_transformed <- transform_killed_w(final_data$killed_w)
# Print LaTeX code
# cat(regression_table)
final_data <- data %>%
mutate(killed_w_binary = ifelse(killed_w > 0, 1, 0)) %>%
left_join(calculate_change(data), by = c("county_code", "year"), relationship = "many-to-many") %>%
select(county_code, year, killed_w_binary, change_gb_tot)
model5_modified <- feols(change_gb_tot ~ killed_w_binary | county_code + stateid^year,
data = final_data,
cluster = "county_code")
rm(list=ls())
# Load necessary libraries
library(dplyr)
library(fixest)
library(broom)
library(haven)
library(tidyverse)
library(knitr)
library(modelsummary)
library(kableExtra)
library(gridExtra)
library(contdid)
data <- read_dta("application/dataverse_files/Data Files/county_gb_main.dta")
# sort(unique(data$year))
# exploratory data analysis
# dd <- data %>% filter(year >=1947& a_killed_w <1) %>% select(a_killed_w, year, county_code)
# plot(dd$a_killed_w)
# sort(unique(dd$a_killed_w_after))
# Define county controls
county_controls <- c(
"shr_farmland", "pop_b_1940", "pop_w_1940", "postal_b", "mig_bw_state_b",
"mig_wi_state_b", "confed_symbol_N", "lynch_black", "naacp_chptrs1941",
"dissimilarity_po", "isolation_po", "alpha_po", "none_b", "educ_lo_1940_b",
"educ_hs_1940_b", "none_w", "educ_lo_1940_w", "educ_hs_1940_w", "hotel_own_w",
"hotel_own_b", "eating_own_w", "eating_own_b", "lforce_w", "lforce_b",
"incwage_w", "incwage_b", "own_w_1940", "own_b_1940", "man_estab_1940",
"man_worker_1940", "man_wages_1940", "man_output_1940", "man_vadd_1940",
"warsup_com_1940", "warsup_oth_1940", "warfac_ind_1940", "warfac_mil_1940",
"war_total_1940"
)
# Define missing controls
county_controls_missing <- c(
"shr_farmland_miss", "pop_b_1940_miss", "pop_w_1940_miss",
"mig_bw_state_b_miss", "mig_wi_state_b_miss", "confed_symbol_N_miss",
"lynch_black_miss", "dissimilarity_po_miss", "isolation_po_miss",
"alpha_po_miss", "none_b_miss", "educ_lo_1940_b_miss", "educ_hs_1940_b_miss",
"none_w_miss", "educ_lo_1940_w_miss", "educ_hs_1940_w_miss", "own_w_1940_miss",
"own_b_1940_miss", "man_estab_1940_miss", "man_worker_1940_miss",
"man_wages_1940_miss", "man_output_1940_miss", "man_vadd_1940_miss",
"war_total_1940_miss", "warsup_com_1940_miss", "warsup_oth_1940_miss",
"warfac_ind_1940_miss", "warfac_mil_1940_miss"
)
# Create asinh transformed variables
for (var in county_controls) {
data[[paste0("asinh_", var)]] <- asinh(data[[var]])
}
# Create interaction terms
for (var in county_controls) {
data[[paste0("postint_", var)]] <- data[[paste0("asinh_", var)]] * data$after
}
# Create missing indicator interactions
for (var in county_controls_missing) {
data[[paste0("mis_", var)]] <- data[[var]] * data$after
}
# Create misscontrols indicator
data$misscontrols <- as.numeric(rowSums(data[county_controls_missing] == 1) > 0)
# Panel A: Full Sample
# remove data where a_gb_tot is na
# Column 1: Basic DiD without fixed effects
model1 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after,
data = data, cluster = "county_code")
summary(model1)
# Column 2: DiD with state fixed effects
model2 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after | stateid,
data = data, cluster = "county_code")
# Column 3: DiD with county controls, year FE, and state FE
controls <- paste(c(paste0("postint_", county_controls),
paste0("mis_", county_controls_missing),
paste0("asinh_", county_controls),
county_controls_missing),
collapse = " + ")
formula3 <- as.formula(paste("a_gb_tot ~ a_killed_w + a_killed_w_after +", controls, "| year + stateid"))
model3 <- feols(formula3, data = data, cluster = "county_code")
# Column 4: DiD with county FE and year FE
model4 <- feols(a_gb_tot ~ a_killed_w_after | county_code + year,
data = data, cluster = "county_code")
# Column 5: DiD with county FE and state-by-year FE
model5 <- feols(a_gb_tot ~ a_killed_w_after | county_code + stateid^year,
data = data, cluster = "county_code")
# Column 6: County-level linear time trends, county FE, year FE
model6 <- feols(a_gb_tot ~ a_killed_w_after + i(year) + year[county_code],
data = data,
cluster = "county_code")
# Update the models list
models <- list(model1, model2, model3, model4, model5, model6)
library(modelsummary)
# Prepare the list of models
model_list <- list(model1, model2, model3, model4, model5, model6)
# Generate the regression table
regression_table <- modelsummary(model_list,
estimate = "{estimate}{stars}",
statistic = "({std.error})",
coef_map = c("a_killed_w_after" = "Coefficient of a_killed_w_after"),
gof_omit = "AIC|BIC|Log.Lik",
output = "latex"
)
# Print LaTeX code
# cat(regression_table)
calculate_change <- function(data) {
base_year <- 1941
# Calculate base values for each county_code in 1941
base_values <- data %>%
filter(year == base_year) %>%
select(county_code, gb_tot) %>%
rename(base_gb_tot = gb_tot)
data %>%
left_join(base_values, by = "county_code") %>%
group_by(county_code, year) %>%
reframe(change_gb_tot = gb_tot - base_gb_tot) %>%
arrange(county_code, year)
}
change_data <- calculate_change(data)
# Step 2: Merge with killed_w data
final_data <- data %>%
left_join(change_data, by = c("county_code", "year"), relationship = "many-to-many") %>%
select(county_code, year, killed_w, change_gb_tot)
# Step 3: Transform killed_w variable
transform_killed_w <- function(x) {
if (min(x) == max(x)) return(x)  # Handle the case where all values are the same
(x - min(x)) / (max(x) - min(x))
}
final_data <- final_data %>% filter(!is.na(killed_w) & !is.na(change_gb_tot))
final_data$killed_w_transformed <- transform_killed_w(final_data$killed_w)
final_data <- data %>%
mutate(killed_w_binary = ifelse(killed_w > 0, 1, 0)) %>%
left_join(calculate_change(data), by = c("county_code", "year"), relationship = "many-to-many") %>%
select(county_code, year, killed_w_binary, change_gb_tot)
model5_modified <- feols(change_gb_tot ~ killed_w_binary | county_code + stateid^year,
data = final_data,
cluster = "county_code")
rm(list=ls())
# Load necessary libraries
library(dplyr)
library(fixest)
library(broom)
library(haven)
library(tidyverse)
library(knitr)
library(modelsummary)
library(kableExtra)
library(gridExtra)
library(contdid)
data <- read_dta("application/dataverse_files/Data Files/county_gb_main.dta")
# sort(unique(data$year))
# exploratory data analysis
# dd <- data %>% filter(year >=1947& a_killed_w <1) %>% select(a_killed_w, year, county_code)
# plot(dd$a_killed_w)
# sort(unique(dd$a_killed_w_after))
# Define county controls
county_controls <- c(
"shr_farmland", "pop_b_1940", "pop_w_1940", "postal_b", "mig_bw_state_b",
"mig_wi_state_b", "confed_symbol_N", "lynch_black", "naacp_chptrs1941",
"dissimilarity_po", "isolation_po", "alpha_po", "none_b", "educ_lo_1940_b",
"educ_hs_1940_b", "none_w", "educ_lo_1940_w", "educ_hs_1940_w", "hotel_own_w",
"hotel_own_b", "eating_own_w", "eating_own_b", "lforce_w", "lforce_b",
"incwage_w", "incwage_b", "own_w_1940", "own_b_1940", "man_estab_1940",
"man_worker_1940", "man_wages_1940", "man_output_1940", "man_vadd_1940",
"warsup_com_1940", "warsup_oth_1940", "warfac_ind_1940", "warfac_mil_1940",
"war_total_1940"
)
# Define missing controls
county_controls_missing <- c(
"shr_farmland_miss", "pop_b_1940_miss", "pop_w_1940_miss",
"mig_bw_state_b_miss", "mig_wi_state_b_miss", "confed_symbol_N_miss",
"lynch_black_miss", "dissimilarity_po_miss", "isolation_po_miss",
"alpha_po_miss", "none_b_miss", "educ_lo_1940_b_miss", "educ_hs_1940_b_miss",
"none_w_miss", "educ_lo_1940_w_miss", "educ_hs_1940_w_miss", "own_w_1940_miss",
"own_b_1940_miss", "man_estab_1940_miss", "man_worker_1940_miss",
"man_wages_1940_miss", "man_output_1940_miss", "man_vadd_1940_miss",
"war_total_1940_miss", "warsup_com_1940_miss", "warsup_oth_1940_miss",
"warfac_ind_1940_miss", "warfac_mil_1940_miss"
)
# Create asinh transformed variables
for (var in county_controls) {
data[[paste0("asinh_", var)]] <- asinh(data[[var]])
}
# Create interaction terms
for (var in county_controls) {
data[[paste0("postint_", var)]] <- data[[paste0("asinh_", var)]] * data$after
}
# Create missing indicator interactions
for (var in county_controls_missing) {
data[[paste0("mis_", var)]] <- data[[var]] * data$after
}
# Create misscontrols indicator
data$misscontrols <- as.numeric(rowSums(data[county_controls_missing] == 1) > 0)
# Panel A: Full Sample
# remove data where a_gb_tot is na
# Column 1: Basic DiD without fixed effects
model1 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after,
data = data, cluster = "county_code")
summary(model1)
# Column 2: DiD with state fixed effects
model2 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after | stateid,
data = data, cluster = "county_code")
# Column 3: DiD with county controls, year FE, and state FE
controls <- paste(c(paste0("postint_", county_controls),
paste0("mis_", county_controls_missing),
paste0("asinh_", county_controls),
county_controls_missing),
collapse = " + ")
formula3 <- as.formula(paste("a_gb_tot ~ a_killed_w + a_killed_w_after +", controls, "| year + stateid"))
model3 <- feols(formula3, data = data, cluster = "county_code")
# Column 4: DiD with county FE and year FE
model4 <- feols(a_gb_tot ~ a_killed_w_after | county_code + year,
data = data, cluster = "county_code")
# Column 5: DiD with county FE and state-by-year FE
model5 <- feols(a_gb_tot ~ a_killed_w_after | county_code + stateid^year,
data = data, cluster = "county_code")
# Column 6: County-level linear time trends, county FE, year FE
model6 <- feols(a_gb_tot ~ a_killed_w_after + i(year) + year[county_code],
data = data,
cluster = "county_code")
# Update the models list
models <- list(model1, model2, model3, model4, model5, model6)
library(modelsummary)
# Prepare the list of models
model_list <- list(model1, model2, model3, model4, model5, model6)
# Generate the regression table
regression_table <- modelsummary(model_list,
estimate = "{estimate}{stars}",
statistic = "({std.error})",
coef_map = c("a_killed_w_after" = "Coefficient of a_killed_w_after"),
gof_omit = "AIC|BIC|Log.Lik",
output = "latex"
)
# Print LaTeX code
# cat(regression_table)
calculate_change <- function(data) {
base_year <- 1941
# Calculate base values for each county_code in 1941
base_values <- data %>%
filter(year == base_year) %>%
select(county_code, gb_tot) %>%
rename(base_gb_tot = gb_tot)
data %>%
left_join(base_values, by = "county_code") %>%
group_by(county_code, year) %>%
reframe(change_gb_tot = gb_tot - base_gb_tot) %>%
arrange(county_code, year)
}
change_data <- calculate_change(data)
# Step 2: Merge with killed_w data
final_data <- data %>%
left_join(change_data, by = c("county_code", "year"), relationship = "many-to-many") %>%
select(county_code, year, killed_w, change_gb_tot, stateid)
# Step 3: Transform killed_w variable
transform_killed_w <- function(x) {
if (min(x) == max(x)) return(x)  # Handle the case where all values are the same
(x - min(x)) / (max(x) - min(x))
}
final_data <- final_data %>% filter(!is.na(killed_w) & !is.na(change_gb_tot))
final_data$killed_w_transformed <- transform_killed_w(final_data$killed_w)
final_data <- data %>%
mutate(killed_w_binary = ifelse(killed_w > 0, 1, 0)) %>%
left_join(calculate_change(data), by = c("county_code", "year"), relationship = "many-to-many") %>%
select(county_code, year, killed_w_binary, change_gb_tot)
model5_modified <- feols(change_gb_tot ~ killed_w_binary | county_code + stateid^year,
data = final_data,
cluster = "county_code")
rm(list=ls())
# Load necessary libraries
library(dplyr)
library(fixest)
library(broom)
library(haven)
library(tidyverse)
library(knitr)
library(modelsummary)
library(kableExtra)
library(gridExtra)
library(contdid)
data <- read_dta("application/dataverse_files/Data Files/county_gb_main.dta")
# sort(unique(data$year))
# exploratory data analysis
# dd <- data %>% filter(year >=1947& a_killed_w <1) %>% select(a_killed_w, year, county_code)
# plot(dd$a_killed_w)
# sort(unique(dd$a_killed_w_after))
# Define county controls
county_controls <- c(
"shr_farmland", "pop_b_1940", "pop_w_1940", "postal_b", "mig_bw_state_b",
"mig_wi_state_b", "confed_symbol_N", "lynch_black", "naacp_chptrs1941",
"dissimilarity_po", "isolation_po", "alpha_po", "none_b", "educ_lo_1940_b",
"educ_hs_1940_b", "none_w", "educ_lo_1940_w", "educ_hs_1940_w", "hotel_own_w",
"hotel_own_b", "eating_own_w", "eating_own_b", "lforce_w", "lforce_b",
"incwage_w", "incwage_b", "own_w_1940", "own_b_1940", "man_estab_1940",
"man_worker_1940", "man_wages_1940", "man_output_1940", "man_vadd_1940",
"warsup_com_1940", "warsup_oth_1940", "warfac_ind_1940", "warfac_mil_1940",
"war_total_1940"
)
# Define missing controls
county_controls_missing <- c(
"shr_farmland_miss", "pop_b_1940_miss", "pop_w_1940_miss",
"mig_bw_state_b_miss", "mig_wi_state_b_miss", "confed_symbol_N_miss",
"lynch_black_miss", "dissimilarity_po_miss", "isolation_po_miss",
"alpha_po_miss", "none_b_miss", "educ_lo_1940_b_miss", "educ_hs_1940_b_miss",
"none_w_miss", "educ_lo_1940_w_miss", "educ_hs_1940_w_miss", "own_w_1940_miss",
"own_b_1940_miss", "man_estab_1940_miss", "man_worker_1940_miss",
"man_wages_1940_miss", "man_output_1940_miss", "man_vadd_1940_miss",
"war_total_1940_miss", "warsup_com_1940_miss", "warsup_oth_1940_miss",
"warfac_ind_1940_miss", "warfac_mil_1940_miss"
)
# Create asinh transformed variables
for (var in county_controls) {
data[[paste0("asinh_", var)]] <- asinh(data[[var]])
}
# Create interaction terms
for (var in county_controls) {
data[[paste0("postint_", var)]] <- data[[paste0("asinh_", var)]] * data$after
}
# Create missing indicator interactions
for (var in county_controls_missing) {
data[[paste0("mis_", var)]] <- data[[var]] * data$after
}
# Create misscontrols indicator
data$misscontrols <- as.numeric(rowSums(data[county_controls_missing] == 1) > 0)
# Panel A: Full Sample
# remove data where a_gb_tot is na
# Column 1: Basic DiD without fixed effects
model1 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after,
data = data, cluster = "county_code")
summary(model1)
# Column 2: DiD with state fixed effects
model2 <- feols(a_gb_tot ~ a_killed_w + a_killed_w_after + after | stateid,
data = data, cluster = "county_code")
# Column 3: DiD with county controls, year FE, and state FE
controls <- paste(c(paste0("postint_", county_controls),
paste0("mis_", county_controls_missing),
paste0("asinh_", county_controls),
county_controls_missing),
collapse = " + ")
formula3 <- as.formula(paste("a_gb_tot ~ a_killed_w + a_killed_w_after +", controls, "| year + stateid"))
model3 <- feols(formula3, data = data, cluster = "county_code")
# Column 4: DiD with county FE and year FE
model4 <- feols(a_gb_tot ~ a_killed_w_after | county_code + year,
data = data, cluster = "county_code")
# Column 5: DiD with county FE and state-by-year FE
model5 <- feols(a_gb_tot ~ a_killed_w_after | county_code + stateid^year,
data = data, cluster = "county_code")
# Column 6: County-level linear time trends, county FE, year FE
model6 <- feols(a_gb_tot ~ a_killed_w_after + i(year) + year[county_code],
data = data,
cluster = "county_code")
# Update the models list
models <- list(model1, model2, model3, model4, model5, model6)
library(modelsummary)
# Prepare the list of models
model_list <- list(model1, model2, model3, model4, model5, model6)
# Generate the regression table
regression_table <- modelsummary(model_list,
estimate = "{estimate}{stars}",
statistic = "({std.error})",
coef_map = c("a_killed_w_after" = "Coefficient of a_killed_w_after"),
gof_omit = "AIC|BIC|Log.Lik",
output = "latex"
)
# Print LaTeX code
# cat(regression_table)
calculate_change <- function(data) {
base_year <- 1941
# Calculate base values for each county_code in 1941
base_values <- data %>%
filter(year == base_year) %>%
select(county_code, gb_tot) %>%
rename(base_gb_tot = gb_tot)
data %>%
left_join(base_values, by = "county_code") %>%
group_by(county_code, year) %>%
reframe(change_gb_tot = gb_tot - base_gb_tot) %>%
arrange(county_code, year)
}
change_data <- calculate_change(data)
# Step 2: Merge with killed_w data
final_data <- data %>%
left_join(change_data, by = c("county_code", "year"), relationship = "many-to-many") %>%
select(county_code, year, killed_w, change_gb_tot, stateid)
calculate_change <- function(data) {
base_year <- 1941
base_values <- data %>%
filter(year == base_year) %>%
select(county_code, gb_tot) %>%
rename(base_gb_tot = gb_tot)
data %>%
left_join(base_values, by = "county_code") %>%
group_by(county_code, year) %>%
reframe(change_gb_tot = gb_tot - base_gb_tot) %>%
arrange(county_code, year)
}
# Calculate change data
change_data <- calculate_change(data)
# Prepare the final dataset
final_data <- data %>%
left_join(change_data, by = c("county_code", "year"), relationship = "many-to-many") %>%
mutate(killed_w_binary = ifelse(killed_w > 0, 1, 0)) %>%
select(county_code, year, killed_w_binary, change_gb_tot, stateid)
# Remove rows with NA values
final_data <- final_data %>%
filter(!is.na(killed_w_binary) & !is.na(change_gb_tot))
# Run the modified model 5
model5_modified <- feols(change_gb_tot ~ killed_w_binary | county_code + stateid^year,
data = final_data,
cluster = "county_code")
unique(data$killed_w)
# Print LaTeX code
# cat(regression_table)
calculate_change <- function(data) {
base_year <- 1941
base_values <- data %>%
filter(year == base_year) %>%
select(county_code, gb_tot) %>%
rename(base_gb_tot = gb_tot)
data %>%
left_join(base_values, by = "county_code") %>%
group_by(county_code, year) %>%
reframe(change_gb_tot = gb_tot - base_gb_tot) %>%
arrange(county_code, year)
}
# Calculate change data
change_data <- calculate_change(data)
# Prepare the final dataset
final_data <- data %>%
left_join(change_data, by = c("county_code", "year"), relationship = "many-to-many") %>%
mutate(
killed_w_binary = ifelse(killed_w > 0, 1, 0),
post_1948 = ifelse(year >= 1948, 1, 0),
killed_w_binary_post = killed_w_binary * post_1948
) %>%
select(county_code, year, killed_w_binary, post_1948, killed_w_binary_post, change_gb_tot, stateid)
# Remove rows with NA values
final_data <- final_data %>%
filter(!is.na(killed_w_binary) & !is.na(change_gb_tot))
# Run the modified model 5
model5_modified <- feols(change_gb_tot ~ killed_w_binary_post | county_code + stateid^year,
data = final_data,
cluster = "county_code")
# Summary of the model
summary(model5_modified)
